import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import net.sf.classifier4J.summariser.SimpleSummariser;


public class SuggestorThread extends Thread {
	
	private Socket socket = null;
	private OutputStream socketOut = null;
	private InputStream socketIn = null;
		
	public SuggestorThread(Socket socket) {
	  	this.socket = socket;
	}
	  
	public void run() {
	    try {
			socketOut = socket.getOutputStream();					
			socketIn = socket.getInputStream();
			
			byte [] buffer = read();
			String doc = new String(buffer);
			
			SimpleSummariser summariser = new SimpleSummariser();
			String summary = summariser.summarise(doc, 1);
			summary.replaceAll("[\r\n]", "\n");
			summary.replaceAll("[\r]"	, "\n");
			summary.replaceAll("[\n]", "\\n");
			
			TagSuggestor tagSugg = new TagSuggestor("stopwords.txt");
			TopTermsList tags = tagSugg.suggest(doc, 10);
			
			String output = "{\"summary\": " + "\"" + summary + "\"," + tags.toJSON() + "}";
			System.out.println(output);
			socketOut.write(output.getBytes());
			
			socketOut.close();
			socket.close();
		} catch (IOException e) {
			System.err.println(e.toString());
		}
	}
	
	private byte[] read() throws IOException {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		byte [] buf = new byte[1024];
	  	int len;
		while(true) {
			len = socketIn.read(buf);
		  	baos.write(buf,0,len);
		  	if(len < 1024)
		  		break;
		}
		return baos.toByteArray();
	}
	
}
